#!/usr/bin/env python3
# run_enhanced_telegram_bot.py
# üíú –ó–ê–ü–£–°–ö ENHANCED TELEGRAM –ë–û–¢–ê
# –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤—ã—Ö UX –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π

import sys
import logging
import asyncio
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

try:
    from bot.services.telegram_bot_enhanced import EnhancedTelegramBot
    from config import TELEGRAM_TOKEN, ADMIN_CHAT_ID
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
    print("pip install python-telegram-bot pandas numpy")
    sys.exit(1)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s [%(levelname)s] %(name)s: %(message)s',
    handlers=[
        logging.FileHandler('enhanced_telegram_bot.log'),
        logging.StreamHandler(sys.stdout)
    ]
)

# –û—Ç–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–∏—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("telegram").setLevel(logging.WARNING)
logging.getLogger("urllib3").setLevel(logging.WARNING)

def print_startup_banner():
    """–°—Ç–∏–ª—å–Ω—ã–π –±–∞–Ω–Ω–µ—Ä –∑–∞–ø—É—Å–∫–∞"""
    print("\n" + "="*60)
    print("üöÄ ENHANCED TELEGRAM BOT - UX REVOLUTION")
    print("="*60)
    print("üíú –†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–µ–Ω—å–æ—Ä–æ–º —Å —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–º–∏ –≤–æ–ª–æ—Å–∞–º–∏")
    print("üéØ –§–æ–∫—É—Å: —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π UX + user-centric design")
    print()
    print("‚ú® –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò:")
    print("   üé® Modern UX vs Classic interface")
    print("   üìä Smart Dashboard —Å live-–¥–∞–Ω–Ω—ã–º–∏")
    print("   üß† AI-powered insights")
    print("   ‚ö° Quick Actions –¥–ª—è power users")
    print("   üîî Smart Notifications —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º")
    print("   üì± –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω")
    print("   üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("   üß™ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ–∏—á")
    print()
    print("üîß –¢–ï–•–ù–û–õ–û–ì–ò–ò:")
    print("   ‚Ä¢ python-telegram-bot (–Ω–æ–≤–µ–π—à–∞—è –≤–µ—Ä—Å–∏—è)")
    print("   ‚Ä¢ Async/await –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
    print("   ‚Ä¢ Smart routing –∏ callback management")
    print("   ‚Ä¢ Context-aware notifications")
    print("   ‚Ä¢ Real-time data updates")
    print()
    
def check_configuration():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    if not TELEGRAM_TOKEN:
        print("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("   –î–æ–±–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –≤ config.py:")
        print("   TELEGRAM_TOKEN = 'your_bot_token_here'")
        return False
    
    if not ADMIN_CHAT_ID:
        print("‚ö†Ô∏è  ADMIN_CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("   –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ")
        print("   –î–æ–±–∞–≤—å—Ç–µ –≤ config.py:")
        print("   ADMIN_CHAT_ID = 'your_chat_id_here'")
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
    return True

async def test_components():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç AI –º–æ–¥—É–ª–µ–π
        from bot.ai import NeuralIntegration
        print("‚úÖ AI –º–æ–¥—É–ª–∏: OK")
    except Exception as e:
        print(f"‚ö†Ô∏è  AI –º–æ–¥—É–ª–∏: {e}")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç API –º–æ–¥—É–ª–µ–π
        from bot.exchange.bybit_api_v5 import BybitAPI
        print("‚úÖ API –º–æ–¥—É–ª–∏: OK")
    except Exception as e:
        print(f"‚ö†Ô∏è  API –º–æ–¥—É–ª–∏: {e}")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º UX –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        from bot.services.ux_config import ux_config, UXEmojis
        from bot.services.smart_notifications import NotificationManager
        print("‚úÖ UX –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: OK")
    except Exception as e:
        print(f"‚ùå UX –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: {e}")
        return False
    
    print("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ")
    return True

def show_usage_tips():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"""
    print("\nüí° –°–û–í–ï–¢–´ –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:")
    print()
    print("üì± –î–õ–Ø –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô:")
    print("   /start - –í—ã–±–æ—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ (Modern UX –∏–ª–∏ Classic)")
    print("   /ux - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Modern UX")
    print("   /classic - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ Classic")
    print("   /dashboard - Smart Dashboard")
    print("   /quick - –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è")
    print()
    print("üîß –î–õ–Ø –†–ê–ó–†–ê–ë–û–¢–ß–ò–ö–û–í:")
    print("   ‚Ä¢ –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ enhanced_telegram_bot.log")
    print("   ‚Ä¢ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: 70% UX, 30% Classic")
    print("   ‚Ä¢ Smart notifications —Å rate limiting")
    print("   ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ bot.get_usage_stats()")
    print()
    print("üé® UX –§–ò–®–ö–ò:")
    print("   ‚Ä¢ Live-–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥")
    print("   ‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    print("   ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞")
    print("   ‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
    print("   ‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º")
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    
    print_startup_banner()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if not check_configuration():
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    if not asyncio.run(test_components()):
        print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö")
        return
    
    show_usage_tips()
    
    print("="*60)
    print("üöÄ –ó–ê–ü–£–°–ö ENHANCED TELEGRAM –ë–û–¢–ê...")
    print("üíú Press Ctrl+C to stop")
    print("="*60)
    print()
    
    try:
        # –°–æ–∑–¥–∞—ë–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot = EnhancedTelegramBot(TELEGRAM_TOKEN)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = bot.get_usage_stats()
        print(f"üìä –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}")
        print(f"   ‚Ä¢ UX –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['ux_users']}")
        print(f"   ‚Ä¢ Classic –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['legacy_users']}")
        print()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        bot.start()
        
    except KeyboardInterrupt:
        print("\nüíú Enhanced Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        try:
            final_stats = bot.get_usage_stats()
            print(f"\nüìä –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {final_stats['total_users']}")
            print(f"   ‚Ä¢ UX adoption rate: {final_stats['ux_adoption_rate']:.1f}%")
            print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {final_stats['messages_sent']}")
        except:
            pass
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logging.exception("Critical error in main")
    
    print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")

if __name__ == "__main__":
    main()