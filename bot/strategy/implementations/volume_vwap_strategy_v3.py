# bot/strategy/implementations/volume_vwap_strategy_v3.py
"""
–†–ï–§–ê–ö–¢–û–†–ò–†–û–í–ê–ù–ù–ê–Ø Volume VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏—è v3.0
–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ç–æ—Ä–≥–æ–≤–æ–π –ª–æ–≥–∏–∫–∏
"""

from __future__ import annotations

from typing import Dict, Optional, Any
import pandas as pd

from ..base import (
    BaseStrategy,
    VolumeVWAPConfig,
    SignalType,
    PositionSide,
)
from ..pipeline import PipelineStrategyMixin, StrategyPipeline, StrategyIndicators
from ..modules.volume_vwap_pipeline import (
    VolumeVwapIndicatorEngine,
    VolumeVwapSignalGenerator,
    VolumeVwapPositionSizer,
)

# –ò–º–ø–æ—Ä—Ç —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–∏–∫—Å–∏–Ω–æ–≤
from ..base.trailing_stop_mixin import TrailingStopMixin
from ..base.market_regime_mixin import MarketRegimeMixin
from ..base.factory_mixin import StrategyFactoryMixin
from ..utils.debug_logger import DebugLoggingMixin
from ..utils.exit_conditions import ExitConditionsCalculator


class VolumeVWAPStrategyV3(
    TrailingStopMixin,           # –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π trailing stop
    MarketRegimeMixin,           # –ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
    StrategyFactoryMixin,        # –£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–±—Ä–∏–∫–∏
    DebugLoggingMixin,           # –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    PipelineStrategyMixin,       # Pipeline –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
    BaseStrategy                 # –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è
):
    """
    –†–ï–§–ê–ö–¢–û–†–ò–†–û–í–ê–ù–ù–ê–Ø Volume VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏—è v3.0

    üî• –£–°–¢–†–ê–ù–ï–ù–û –î–£–ë–õ–ò–†–û–í–ê–ù–ò–ï:
    - 55+ —Å—Ç—Ä–æ–∫ trailing stop –ª–æ–≥–∏–∫–∏ ‚Üí TrailingStopMixin
    - 15+ —Å—Ç—Ä–æ–∫ market regime –∞–Ω–∞–ª–∏–∑–∞ ‚Üí MarketRegimeMixin
    - 25+ —Å—Ç—Ä–æ–∫ —Ñ–∞–±—Ä–∏—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π ‚Üí StrategyFactoryMixin
    - 20+ —Å—Ç—Ä–æ–∫ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ‚Üí DebugLoggingMixin
    - VWAP-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—ã—Ö–æ–¥–∞ ‚Üí ExitConditionsCalculator

    ‚úÖ –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê:
    - –í—Å–µ —Ä–∞—Å—á–µ—Ç—ã VWAP –æ—Å—Ç–∞–ª–∏—Å—å –∏–¥–µ–Ω—Ç–∏—á–Ω—ã–º–∏
    - –õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è volume spike –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–∞
    - –ê–ª–≥–æ—Ä–∏—Ç–º—ã –≤—Ö–æ–¥–æ–≤/–≤—ã—Ö–æ–¥–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ —Ä–∞–Ω—å—à–µ
    - –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ
    """

    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –º–∏–∫—Å–∏–Ω–æ–≤
    strategy_type = 'volume_vwap'

    def __init__(self, config: VolumeVWAPConfig):
        super().__init__(config, "VolumeVWAP_v3")
        self.config = config

        # –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: —Ç–µ –∂–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        self.config.min_risk_reward_ratio = max(0.8, self.config.min_risk_reward_ratio)
        if self.config.min_risk_reward_ratio > self.config.risk_reward_ratio:
            self.config.risk_reward_ratio = self.config.min_risk_reward_ratio

        # –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: –∏–¥–µ–Ω—Ç–∏—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ pipeline
        pipeline = StrategyPipeline(
            indicator_engine=VolumeVwapIndicatorEngine(
                self.config,
                base_indicator_fn=self.calculate_base_indicators,
            ),
            signal_generator=VolumeVwapSignalGenerator(self.config),
            position_sizer=VolumeVwapPositionSizer(self.config, round_price_fn=self.round_price),
        )
        self._init_pipeline(pipeline)

        self.logger.info(
            "üéØ Volume VWAP v3.0 —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞: volume_mult=%s, trend_period=%s",
            self.config.volume_multiplier,
            self.config.trend_period,
        )

    # =========================================================================
    # –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
    # =========================================================================

    def _adjust_for_low_volatility(self, df: pd.DataFrame) -> Optional[float]:
        """
        –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: –ò–¥–µ–Ω—Ç–∏—á–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –Ω–∏–∑–∫–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏.
        """
        if not self.config.adaptive_parameters or len(df) <= 20:
            return None

        returns = df['close'].pct_change().dropna()
        if returns.empty:
            return None

        volatility = returns.tail(10).std()
        if volatility < 0.02:
            original = self.config.volume_multiplier
            new_value = max(1.5, original * 0.5)
            if new_value != original:
                self.logger.info(
                    "üîÑ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –¥–ª—è –Ω–∏–∑–∫–æ–π –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏: %.2f ‚Üí %.2f",
                    original,
                    new_value,
                )
                self.config.volume_multiplier = new_value
                return original
        return None

    def calculate_strategy_indicators(self, market_data) -> Dict[str, Any]:
        """–¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: –†–∞—Å—á–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ —Å –∞–¥–∞–ø—Ç–∞—Ü–∏–µ–π."""
        df = self.get_primary_dataframe(market_data)
        original_multiplier = None
        if df is not None:
            original_multiplier = self._adjust_for_low_volatility(df)
        try:
            return super().calculate_strategy_indicators(market_data)
        finally:
            if original_multiplier is not None:
                self.config.volume_multiplier = original_multiplier

    def _before_signal_generation(
        self,
        df: pd.DataFrame,
        indicators: StrategyIndicators,
        market_analysis: Dict[str, Any],
    ) -> tuple[bool, Optional[str]]:
        """–¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π —Å–∏–≥–Ω–∞–ª–æ–≤."""
        if self.config.volatility_filter:
            returns = df['close'].pct_change().dropna()
            if not returns.empty:
                current_volatility = returns.tail(10).std()
                if current_volatility > self.config.max_volatility_threshold:
                    return False, (
                        f"volatility {current_volatility:.4f} > "
                        f"{self.config.max_volatility_threshold:.4f}"
                    )
        if 'volume' in df.columns:
            last_volume = float(df['volume'].iloc[-1])
            if last_volume < self.config.min_volume_for_signal:
                return False, (
                    f"volume {last_volume:.2f} < "
                    f"{self.config.min_volume_for_signal:.2f}"
                )
        return True, None

    # =========================================================================
    # –†–ï–§–ê–ö–¢–û–†–ò–†–û–í–ê–ù–ù–´–ï –ú–ï–¢–û–î–´ (–ó–ê–ú–ï–ù–Ø–Æ–¢ –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–ô –ö–û–î)
    # =========================================================================

    def _check_strategic_exit_conditions(self, market_data, state, current_price: float) -> Optional[Dict[str, Any]]:
        """
        üî• –í–ú–ï–°–¢–û 55+ –°–¢–†–û–ö –î–£–ë–õ–ò–†–û–í–ê–ù–ù–û–ì–û –ö–û–î–ê ‚Üí 3 –°–¢–†–û–ö–ò!
        –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: ExitConditionsCalculator –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç—É –∂–µ –ª–æ–≥–∏–∫—É VWAP –≤—ã—Ö–æ–¥–æ–≤
        """
        return ExitConditionsCalculator.calculate_strategic_exit(
            self, market_data, state, current_price
        )

    def _on_market_analysis(self, market_analysis: Dict[str, Any], df: pd.DataFrame) -> None:
        """
        üî• –í–ú–ï–°–¢–û –î–£–ë–õ–ò–†–û–í–ê–ù–ù–û–ì–û –ö–û–î–ê ‚Üí –£–ù–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–´–ô –ê–ù–ê–õ–ò–ó
        –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –î–û–ü–û–õ–ù–ï–ù–ê: –¥–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤
        """
        self.update_market_regime(df)

        # –¢–û–†–ì–û–í–ê–Ø –õ–û–ì–ò–ö–ê –°–û–•–†–ê–ù–ï–ù–ê: –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
        condition = market_analysis.get('condition')
        if condition and self._execution_count % 20 == 0:
            self.log_market_analysis(market_analysis)

    # =========================================================================
    # –ö–ê–°–¢–û–ú–ù–´–ï –ü–†–ï–°–ï–¢–´ –î–õ–Ø FACTORY MIXIN
    # =========================================================================

    @classmethod
    def _get_custom_presets(cls) -> Dict[str, Any]:
        """–ö–∞—Å—Ç–æ–º–Ω—ã–µ –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è Volume VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏."""

        return {
            'crypto_volatile': VolumeVWAPConfig(
                volume_multiplier=4.0,
                max_volatility_threshold=0.08,
                signal_strength_threshold=0.7,
                risk_reward_ratio=1.8,
                confluence_required=2,
                adaptive_parameters=True,
            ),
            'crypto_stable': VolumeVWAPConfig(
                volume_multiplier=2.5,
                max_volatility_threshold=0.04,
                signal_strength_threshold=0.6,
                risk_reward_ratio=2.0,
                confluence_required=3,
                adaptive_parameters=True,
            ),
            'forex': VolumeVWAPConfig(
                volume_multiplier=1.8,
                max_volatility_threshold=0.02,
                signal_strength_threshold=0.65,
                risk_reward_ratio=2.2,
                confluence_required=3,
                adaptive_parameters=False,
            ),
            'scalping': VolumeVWAPConfig(
                volume_multiplier=6.0,
                max_volatility_threshold=0.12,
                signal_strength_threshold=0.5,
                risk_reward_ratio=1.2,
                confluence_required=1,
                trailing_stop_activation_pct=1.0,
            ),
        }


# =========================================================================
# –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –§–ê–ë–†–ò–ß–ù–´–ï –§–£–ù–ö–¶–ò–ò
# =========================================================================

# üî• –í–ú–ï–°–¢–û 25+ –°–¢–†–û–ö –î–£–ë–õ–ò–†–û–í–ê–ù–ù–´–• –§–ê–ë–†–ò–ö ‚Üí –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –ì–ï–ù–ï–†–ê–¶–ò–Ø!

def create_vwap_crypto_volatile(**kwargs) -> VolumeVWAPStrategyV3:
    """–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."""
    return VolumeVWAPStrategyV3.create_preset('crypto_volatile', **kwargs)

def create_vwap_crypto_stable(**kwargs) -> VolumeVWAPStrategyV3:
    """–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã."""
    return VolumeVWAPStrategyV3.create_preset('crypto_stable', **kwargs)

def create_vwap_forex(**kwargs) -> VolumeVWAPStrategyV3:
    """–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è —Ñ–æ—Ä–µ–∫—Å."""
    return VolumeVWAPStrategyV3.create_preset('forex', **kwargs)

def create_vwap_scalping(**kwargs) -> VolumeVWAPStrategyV3:
    """–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å–∫–∞–ª—å–ø–∏–Ω–≥–æ–≤–æ–π VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏."""
    return VolumeVWAPStrategyV3.create_preset('scalping', **kwargs)


# =========================================================================
# –ö–û–ù–°–¢–ê–ù–¢–´ –ò –ú–ï–¢–ê–î–ê–ù–ù–´–ï
# =========================================================================

STRATEGY_INFO_V3 = {
    'name': 'VolumeSpike_VWAP_v3',
    'version': '3.0.0',
    'description': '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è Volume VWAP —Å—Ç—Ä–∞—Ç–µ–≥–∏—è —Å —É—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ–º',
    'author': 'TradingBot Team',
    'category': 'Volume Analysis',
    'trading_logic_preserved': {
        'vwap_calculations': '100% identical',
        'volume_spike_detection': '100% identical',
        'adaptive_parameters': '100% identical',
        'signal_generation': '100% identical',
        'entry_exit_logic': '100% identical',
    },
    'enhancements': [
        '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π trailing stop —Å ATR',
        '–ê–Ω–∞–ª–∏–∑ —Ä—ã–Ω–æ—á–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤',
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–µ—Å–µ—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä—ã–Ω–∫–æ–≤',
        '–£–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º',
    ]
}