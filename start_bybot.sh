#!/bin/bash

# üöÄ BYBOT LAUNCHER - –£–¥–æ–±–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
# –°–æ–∑–¥–∞–Ω–æ –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –õ–æ–≥–æ—Ç–∏–ø
echo -e "${PURPLE}"
echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                   üöÄ BYBOT üöÄ                ‚ïë"
echo "‚ïë            Advanced Trading System            ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo -e "${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
echo -e "${CYAN}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [[ "$VIRTUAL_ENV" != "" ]]; then
    echo -e "${GREEN}‚úÖ Virtual environment –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω: $(basename $VIRTUAL_ENV)${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ê–∫—Ç–∏–≤–∏—Ä—É—é virtual environment...${NC}"
    source .venv/bin/activate
    echo -e "${GREEN}‚úÖ Virtual environment –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${CYAN}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
python -c "import numpy, pandas, ta, psutil, telegram" 2>/dev/null && echo -e "${GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}" || {
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏! –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...${NC}"
    pip install -r requirements.txt
}

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞ –∑–∞–ø—É—Å–∫–∞
echo
echo -e "${BLUE}üéØ –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º:${NC}"
echo "1. üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ (Full System)"
echo "2. ‚ÑπÔ∏è  –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"
echo "3. üß™ –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram"
echo "4. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
echo "5. üìã –ü–æ–¥—Ä–æ–±–Ω–æ–µ –º–µ–Ω—é"
echo

read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice

case $choice in
    1)
        echo -e "${GREEN}üöÄ –ë—ã—Å—Ç—Ä—ã–π –∑–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã...${NC}"
        echo -e "${YELLOW}üí° –¢–æ—Ä–≥–æ–≤–ª—è + Telegram –±–æ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã${NC}"
        python main.py
        ;;
    2)
        echo -e "${CYAN}‚ÑπÔ∏è  –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã...${NC}"
        echo
        echo -e "${YELLOW}üìä –ê–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏:${NC}"
        python -c "
from bot.core.trader import get_active_strategies
from config import get_strategy_config
strategies = get_active_strategies()
print(f'–ù–∞–π–¥–µ–Ω–æ: {len(strategies)} –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π')
for s in strategies:
    config = get_strategy_config(s)
    print(f'  ‚Ä¢ {s}: \${config[\"trade_amount\"]}')
"
        echo
        echo -e "${YELLOW}ü§ñ Telegram –±–æ—Ç:${NC}"
        python -c "
from config import TELEGRAM_TOKEN, ADMIN_CHAT_ID
print(f'Token: {TELEGRAM_TOKEN[:10] if TELEGRAM_TOKEN else \"None\"}...')
print(f'Admin ID: {ADMIN_CHAT_ID if ADMIN_CHAT_ID else \"None\"}')
"
        echo
        echo -e "${YELLOW}üí∞ –ë–∞–ª–∞–Ω—Å—ã:${NC}"
        python -c "
from bot.exchange.bybit_api_v5 import TradingBotV5
from config import get_strategy_config
try:
    config = get_strategy_config('volume_vwap_default')
    api = TradingBotV5('BTCUSDT', config['api_key'], config['api_secret'], config['uid'])
    balance = api.get_wallet_balance_v5()
    if balance and balance.get('retCode') == 0:
        usdt = balance['result']['list'][0]['coin'][0]
        print(f'–û—Å–Ω–æ–≤–Ω–æ–π —Å—á–µ—Ç: \${float(usdt[\"walletBalance\"]):.2f}')
    else:
        print('API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è demo)')
except Exception as e:
    print(f'–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {str(e)[:50]}...')
"
        ;;
    3)
        echo -e "${CYAN}üß™ –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram...${NC}"
        if [[ -f "send_test_message.py" ]]; then
            python send_test_message.py || echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω).${NC}"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  –°–∫—Ä–∏–ø—Ç send_test_message.py –Ω–µ –Ω–∞–π–¥–µ–Ω.${NC}"
        fi
        ;;
    4)
        echo -e "${RED}üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã...${NC}"

        if command -v systemctl >/dev/null 2>&1; then
            echo "–ü—Ä–æ–±—É—é –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å systemd —Å–µ—Ä–≤–∏—Å—ã..."
            sudo systemctl stop bybot-trading.service 2>/dev/null || echo "bybot-trading –Ω–µ –∑–∞–ø—É—â–µ–Ω"
            sudo systemctl stop bybot-telegram.service 2>/dev/null || echo "bybot-telegram –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        else
            echo -e "${YELLOW}‚ö†Ô∏è  systemctl –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É —Å–µ—Ä–≤–∏—Å–æ–≤.${NC}"
        fi

        echo "–ó–∞–≤–µ—Ä—à–∞—é –ø—Ä–æ—Ü–µ—Å—Å—ã Python..."
        pkill -f "python.*main.py" 2>/dev/null || echo "main.py –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        pkill -f "python.*bot.core.trader" 2>/dev/null || echo "bot.core.trader –Ω–µ –∑–∞–ø—É—â–µ–Ω"
        pkill -f "python.*metrics_exporter" 2>/dev/null || echo "metrics_exporter –Ω–µ –∑–∞–ø—É—â–µ–Ω"

        echo -e "${GREEN}‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
        ;;
    5)
        echo -e "${PURPLE}üìã –ü–æ–¥—Ä–æ–±–Ω–æ–µ –º–µ–Ω—é (–±—É–¥—É—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è)${NC}"
        echo "–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
        exit 1
        ;;
esac

echo
echo -e "${GREEN}üéâ –ì–æ—Ç–æ–≤–æ!${NC}"
